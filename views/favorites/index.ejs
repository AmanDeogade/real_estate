<% layout("/layouts/boilerplate") %>

<style>
    .favorites-hero {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        padding: 3rem 0;
        color: white;
        margin-bottom: 2rem;
    }

    .favorites-stats {
        background: white;
        padding: 2rem;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .stat-card {
        text-align: center;
        padding: 1.5rem;
        border-radius: 10px;
        background: #f8f9fa;
        transition: all 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        color: #ff6b6b;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        color: #7f8c8d;
        font-size: 1rem;
    }

    .favorites-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }

    .favorite-card {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        position: relative;
    }

    .favorite-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }

    .favorite-image {
        height: 250px;
        width: 100%;
        object-fit: cover;
    }

    .favorite-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: #ff6b6b;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .favorite-content {
        padding: 1.5rem;
    }

    .favorite-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        line-height: 1.3;
    }

    .favorite-location {
        color: #7f8c8d;
        font-size: 1rem;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .favorite-price {
        font-size: 1.4rem;
        font-weight: 700;
        color: #27ae60;
        margin-bottom: 1rem;
    }

    .favorite-details {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        color: #7f8c8d;
    }

    .favorite-actions {
        display: flex;
        gap: 1rem;
        margin-top: 1rem;
    }

    .btn-primary {
        background: #667eea;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        text-decoration: none;
        text-align: center;
        flex: 1;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background: #5a6fd8;
        transform: translateY(-2px);
    }

    .btn-danger {
        background: #e74c3c;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        text-decoration: none;
        text-align: center;
        flex: 1;
        transition: all 0.3s ease;
    }

    .btn-danger:hover {
        background: #c0392b;
        transform: translateY(-2px);
    }

    .favorite-notes {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        margin-top: 1rem;
        border-left: 4px solid #667eea;
    }

    .notes-input {
        width: 100%;
        padding: 0.75rem;
        border: 2px solid #e1e8ed;
        border-radius: 8px;
        font-size: 1rem;
        margin-bottom: 0.5rem;
        resize: vertical;
    }

    .notes-input:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .priority-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .priority-high {
        background: #e74c3c;
        color: white;
    }

    .priority-medium {
        background: #f39c12;
        color: white;
    }

    .priority-low {
        background: #27ae60;
        color: white;
    }

    .interest-level {
        background: #3498db;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        margin-bottom: 1rem;
        display: inline-block;
    }

    .timeline {
        background: #9b59b6;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        margin-bottom: 1rem;
        display: inline-block;
    }

    .empty-favorites {
        text-align: center;
        padding: 4rem 2rem;
        color: #7f8c8d;
    }

    .empty-favorites h3 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: #2c3e50;
    }

    .empty-favorites p {
        font-size: 1.1rem;
        margin-bottom: 2rem;
    }

    .browse-btn {
        background: #667eea;
        color: white;
        padding: 1rem 2rem;
        border-radius: 25px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        display: inline-block;
    }

    .browse-btn:hover {
        background: #5a6fd8;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        color: white;
    }

    .filters-section {
        background: white;
        padding: 2rem;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .filter-row {
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-wrap: wrap;
    }

    .filter-select {
        padding: 0.5rem 1rem;
        border: 2px solid #e1e8ed;
        border-radius: 8px;
        font-size: 1rem;
        background: white;
        cursor: pointer;
        min-width: 150px;
    }

    .filter-select:focus {
        outline: none;
        border-color: #667eea;
    }

    @media (max-width: 768px) {
        .favorites-grid {
            grid-template-columns: 1fr;
        }
        
        .filter-row {
            flex-direction: column;
            align-items: stretch;
        }
        
        .filter-select {
            min-width: auto;
        }
    }
</style>

<div class="favorites-hero">
    <div class="container">
        <h1 class="text-center mb-4">My Favorite Properties</h1>
        <p class="text-center mb-4">Manage your saved properties and track your preferences</p>
    </div>
</div>

<div class="container">
    <% if (favorites && favorites.length > 0) { %>
    <div class="favorites-stats">
        <div class="row">
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number"><%= favorites.length %></div>
                    <div class="stat-label">Total Favorites</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number"><%= favorites.filter(f => f.priority === 'high').length %></div>
                    <div class="stat-label">High Priority</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number"><%= favorites.filter(f => f.buyerPreferences?.interestLevel === 'ready_to_buy').length %></div>
                    <div class="stat-label">Ready to Buy</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number"><%= favorites.filter(f => f.brokerAssigned).length %></div>
                    <div class="stat-label">Broker Assigned</div>
                </div>
            </div>
        </div>
    </div>

    <div class="filters-section">
        <div class="filter-row">
            <select class="filter-select" onchange="filterFavorites('priority', this.value)">
                <option value="">All Priorities</option>
                <option value="high">High Priority</option>
                <option value="medium">Medium Priority</option>
                <option value="low">Low Priority</option>
            </select>
            
            <select class="filter-select" onchange="filterFavorites('interestLevel', this.value)">
                <option value="">All Interest Levels</option>
                <option value="just_browsing">Just Browsing</option>
                <option value="interested">Interested</option>
                <option value="very_interested">Very Interested</option>
                <option value="ready_to_buy">Ready to Buy</option>
            </select>
            
            <select class="filter-select" onchange="filterFavorites('timeline', this.value)">
                <option value="">All Timelines</option>
                <option value="immediate">Immediate</option>
                <option value="1-3_months">1-3 Months</option>
                <option value="3-6_months">3-6 Months</option>
                <option value="6-12_months">6-12 Months</option>
                <option value="flexible">Flexible</option>
            </select>
            
            <select class="filter-select" onchange="filterFavorites('brokerAssigned', this.value)">
                <option value="">All Assignments</option>
                <option value="true">Broker Assigned</option>
                <option value="false">No Broker</option>
            </select>
        </div>
    </div>

    <div class="favorites-grid">
        <% favorites.forEach(favorite => { %>
        <div class="favorite-card" data-favorite-id="<%= favorite._id %>" 
             data-priority="<%= favorite.priority %>"
             data-interest="<%= favorite.buyerPreferences?.interestLevel %>"
             data-timeline="<%= favorite.buyerPreferences?.timeline %>"
             data-broker="<%= favorite.brokerAssigned %>">

            <% if (favorite.property) { %>
                <% if (favorite.property.featured) { %>
                <div class="favorite-badge">Featured</div>
                <% } %>

                <img src="<%= favorite.property.images && favorite.property.images.length > 0 ? favorite.property.images[0].url : '/images/default-property.jpg' %>" 
                     alt="<%= favorite.property.title || 'Property' %>" class="favorite-image">

                <div class="favorite-content">
                    <h3 class="favorite-title"><%= favorite.property.title || 'Untitled Property' %></h3>
                    
                    <div class="favorite-location">
                        <i class="fas fa-map-marker-alt"></i>
                        <%= favorite.property.address ? (favorite.property.address.city + ', ' + favorite.property.address.state) : 'Location not specified' %>
                    </div>
                    
                    <div class="favorite-price">
                        ₹<%= favorite.property.price ? (favorite.property.price.amount ? favorite.property.price.amount.toLocaleString() : 'N/A') : 'N/A' %>
                        <span style="font-size: 0.9rem; color: #7f8c8d;">
                            <%= favorite.property.listingType === 'rent' ? '/month' : '' %>
                        </span>
                    </div>
                    
                    <div class="favorite-details">
                        <span><i class="fas fa-bed"></i> <%= favorite.property.bedrooms || 'N/A' %> Beds</span>
                        <span><i class="fas fa-bath"></i> <%= favorite.property.bathrooms || 'N/A' %> Baths</span>
                        <span><i class="fas fa-ruler-combined"></i> <%= favorite.property.area ? favorite.property.area.size + ' ' + favorite.property.area.unit : 'N/A' %></span>
                    </div>

                    <div class="priority-badge priority-<%= favorite.priority %>">
                        <%= (favorite.priority || '').charAt(0).toUpperCase() + (favorite.priority || '').slice(1) %> Priority
                    </div>

                    <div class="interest-level">
                        <%= favorite.buyerPreferences?.interestLevel?.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) || 'Interested' %>
                    </div>

                    <div class="timeline">
                        <%= favorite.buyerPreferences?.timeline?.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) || 'Flexible' %>
                    </div>

                    <% if (favorite.notes) { %>
                    <div class="favorite-notes">
                        <strong>Notes:</strong> <%= favorite.notes %>
                    </div>
                    <% } %>

                    <div class="favorite-actions">
                        <a href="/listings/<%= favorite.property._id %>" class="btn-primary">View Details</a>
                        <button class="btn-danger" onclick="removeFavorite('<%= favorite._id %>')">Remove</button>
                    </div>

                    <div class="mt-3">
                        <textarea class="notes-input" placeholder="Add notes about this property..." 
                                  onchange="updateNotes('<%= favorite._id %>', this.value)"><%= favorite.notes || '' %></textarea>
                    </div>
                </div>
            <% } else { %>
                <div class="favorite-content">
                    <h3 class="favorite-title">Property not available</h3>
                    <p class="text-muted">This property has been removed or is no longer available.</p>
                    <div class="favorite-actions">
                        <button class="btn-danger" onclick="removeFavorite('<%= favorite._id %>')">Remove</button>
                    </div>
                </div>
            <% } %>
        </div>
        <% }); %>
    </div>
    <% } else { %>
    <div class="empty-favorites">
        <h3>No favorites yet</h3>
        <p>Start exploring properties and add them to your favorites to keep track of what you like.</p>
        <a href="/listings" class="browse-btn">Browse Properties</a>
    </div>
    <% } %>
</div>

<script>
function filterFavorites(filterType, value) {
    const cards = document.querySelectorAll('.favorite-card');
    
    cards.forEach(card => {
        let show = true;
        
        if (filterType === 'priority' && value && card.dataset.priority !== value) {
            show = false;
        }
        
        if (filterType === 'interest' && value && card.dataset.interest !== value) {
            show = false;
        }
        
        if (filterType === 'timeline' && value && card.dataset.timeline !== value) {
            show = false;
        }
        
        if (filterType === 'brokerAssigned' && value) {
            const hasBroker = card.dataset.broker === 'true';
            if (value === 'true' && !hasBroker) show = false;
            if (value === 'false' && hasBroker) show = false;
        }
        
        card.style.display = show ? 'block' : 'none';
    });
}

async function removeFavorite(favoriteId) {
    if (confirm('Are you sure you want to remove this property from your favorites?')) {
        try {
            const response = await fetch(`/favorites/${favoriteId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                const card = document.querySelector(`[data-favorite-id="${favoriteId}"]`);
                card.remove();
                
                // Update stats
                location.reload();
            }
        } catch (error) {
            console.error('Error removing favorite:', error);
        }
    }
}

async function updateNotes(favoriteId, notes) {
    try {
        const response = await fetch(`/favorites/${favoriteId}/notes`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ notes })
        });

        if (response.ok) {
            console.log('Notes updated successfully');
        }
    } catch (error) {
        console.error('Error updating notes:', error);
    }
}
</script>
